local Template_Code = [[
/*
    ____   ____     .__    .__       .__           _________                 __                 .__                      
    \   \ /   /____ |  |__ |__| ____ |  |   ____   \_   ___ \ __ __  _______/  |_  ____   _____ |__|_______ ___________  
     \   Y   // __ \|  |  \|  |/ ___\|  | _/ __ \  /    \  \/|  |  \/  ___/\   __\/  _ \ /     \|  \___   // __ \_  __ \ 
      \     /\  ___/|   Y  \  \  \___|  |_\  ___/  \     \___|  |  /\___ \  |  | (  <_> )  Y Y  \  |/    /\  ___/|  | \/ 
       \___/  \___  >___|  /__|\___  >____/\___  >  \______  /____//____  > |__|  \____/|__|_|  /__/_____ \\___  >__|    
                  \/     \/        \/          \/          \/           \/                    \/         \/    \/ 
    
    Code generated by Vitroze Gaming
    Vehicle name : %vehName
    Vehicle ID: %vehID
*/

local vehModel = "%vehModel"
hook.Add("PlayerSpawnedVehicle", "vc_%vehName", function(ply, vehicle)
    if vehicle:GetVehicleClass() == "%vehID" or vehicle:GetModel() == vehModel then

        local prop = ents.Create("prop_dynamic_ornament")
        if !IsValid(prop) then return end
        prop:SetModel("%propModel")
        prop:SetPos(vehicle:LocalToWorld(Vector(%propVector)))
        prop:SetAngles(vehicle:LocalToWorldAngles(Angle(%propAngle)))
        prop:SetOwner(ply)
        prop:Spawn()
        prop:Activate()
        prop:SetParent(vehicle)
        prop:SetNoDraw(false)
        prop:DrawShadow(true)
    end
end)

local V = {
    Name = "%vehName",
    Model = vehModel,
    Class = "%vehClass",
    Category = "%catName",
    Author = "%authName",
    Information = "%information",
    KeyValues = { vehiclescript = "%KeyValues" },
}

list.Set( "Vehicles", "%vehID", V )

/*
     __      __  _____ __________  _______  .___ _______    ________ 
    /  \    /  \/  _  \\______   \ \      \ |   |\      \  /  _____/ 
    \   \/\/   /  /_\  \|       _/ /   |   \|   |/   |   \/   \  ___ 
    \        /    |    \    |   \/    |    \   /    |    \    \_\  \
    \__/\  /\____|__  /____|_  /\____|__  /___\____|__  /\______  /
        \/         \/       \/         \/            \/        \/ 

    If you want to modify it with svmod for example, you will have to modify the vehiclescript and the model
    In order to make the Emergency Lighting System (ELS) compatible, you will have to change the name of the vehiclescript folder and the vehicle model.

    Step 1
    To do this, you will need a site/software that allows you to extract the addons. For example gmpublisher. After extracting these files from the folders "materials", "models" and "script", you can directly copy it. As on the screen below
    https://imgur.com/vecSoVU

    Step 2
    After doing that, put the folders in the directory where you put the lua file you generated. Go into the models folder and then just rename the folder. You can rename it as you want, you should remember the name!
    https://imgur.com/h82uEeo

    Step 3
    After having done step 2, you just have to do the same thing (rename the folder) with the scripts\vehicles folder.
    https://imgur.com/QShYZqR

    Step 4,
    Go to the lua file where you put the code generated by the addon. Modify line 14 by changing the name of the folder. For example the folder was called crsk_autos (Line 14 is local vehModel = "models/crsk_autos/mercedes-benz/g500_2008.mdl"). I renamed it to vc_mercedes_benz, so you will have to modify line 14 by putting local vehModel = "models/vc_mercedes_benz/g500_2008.mdl". WARNING: You will have to republish the addon with the modified model, otherwise you will see it in error!

    Let's go to vehiclescript, this time you will modify line 39 by putting instead url of the name of the folder you modified. For example :

    KeyValues = { vehiclescript = "scripts/vehicles/vc_mercedes_benz/crsk_mercedes_g500_2008.txt" },

    All that is missing is that you publish on the workshop. You will have a vehicle with a flashing ramp and which could be compatible with an ELS mod
*/
]]

// Create a code automatically to put an object on the vehicle in Lua
function VehiculeCustomizerVitroze:CompileCode(vehName, catName, information, propModel, propVectorX, propVectorY, propVectorZ, propAngleYaw, propAnglePitch, propAngleRoll)
    local lp           = LocalPlayer()
    if !IsValid(lp) then return end 
    local car          = lp:GetVehicle()
    if !IsValid(car) then notification.AddLegacy("You are not in a vehicle", NOTIFY_ERROR, 2) return end
    if vehName == "" then notification.AddLegacy("You must enter a name for your vehicle", NOTIFY_ERROR, 2) return end
    if catName == "" then notification.AddLegacy("You must enter a category for your vehicle", NOTIFY_ERROR, 2) return end
    if propModel == "" then notification.AddLegacy("You must enter a model for your prop", NOTIFY_ERROR, 2) return end


    local className    = car:GetVehicleClass()
    local vehData      = list.Get("Vehicles")[className]
    local vehClass     = vehData.Class
    local vehModel     = vehData.Model
    local vehAuthor    = lp:Nick()
    local vehKeyValues = vehData.KeyValues

    local vehID        = string.lower(vehAuthor.." "..vehName)

    // Detecting special characters in string lua
    local tbl = {"!", " ", "_", '"', "#", "$", '%', "&", "'", "(", ")", "*", "+", ",", "-", ".", "/", ":", ";", "<", "=", ">", "?", "@", "[", "\\", "]", "^", "`", "{", "|", "}", "~"}
    for _, v in pairs(tbl) do 
        if v == "%" or v == "(" or v == ")" or v == "[" or v == "]" then vehID = vehID:Replace(v, "_") continue
        elseif string.find(vehID, v) then 
            vehID = vehID:Replace(v, "_")
            continue
        end
    end

    local propVector   = Vector(propVectorX, propVectorY, propVectorZ)
    propVector         = string.Replace(tostring(propVector), " ", ", ")
    local propAngle    = Angle(propAngleYaw, propAnglePitch, propAngleRoll)
    propAngle          = string.Replace(tostring(propAngle), " ", ", ")

    Template_Code = string.Replace(Template_Code, "%vehName", vehName)
    Template_Code = string.Replace(Template_Code, "%className", className)
    Template_Code = string.Replace(Template_Code, "%propModel", propModel)
    Template_Code = string.Replace(Template_Code, "%propVector", propVector)
    Template_Code = string.Replace(Template_Code, "%propAngle", propAngle)
    Template_Code = string.Replace(Template_Code, "%vehModel", vehModel)
    Template_Code = string.Replace(Template_Code, "%vehClass", vehClass)
    Template_Code = string.Replace(Template_Code, "%catName", catName)
    Template_Code = string.Replace(Template_Code, "%authName", vehAuthor)
    Template_Code = string.Replace(Template_Code, "%information", information)
    Template_Code = string.Replace(Template_Code, "%vehID", vehID)
    Template_Code = string.Replace(Template_Code, "%KeyValues", vehKeyValues.vehiclescript)
    
    notification.AddLegacy("Code generated, check your clipboard text.", NOTIFY_GENERIC, 5)
    return SetClipboardText(Template_Code)
end
concommand.Add("object_creator_vehicle_generate_code", function()
    VehiculeCustomizerVitroze:CompileCode(GetConVar("vc_name"):GetString(), GetConVar("vc_category"):GetString(), GetConVar("vc_information"):GetString(), GetConVar("vc_props"):GetString(), GetConVar("vc_x"):GetFloat(), GetConVar("vc_y"):GetFloat(), GetConVar("vc_z"):GetFloat(), GetConVar("vc_pitch"):GetFloat(), GetConVar("vc_yaw"):GetFloat(), GetConVar("vc_roll"):GetFloat())

end)



function VehiculeCustomizerVitroze:VisualProps(propModel, propVectorX, propVectorY, propVectorZ, propAngleYaw, propAnglePitch, propAngleRoll)
    local lp = LocalPlayer()
    if !IsValid(lp) then return end
    
    local car = lp:GetVehicle()
    if !IsValid(car) then notification.AddLegacy("You are not in a vehicle", NOTIFY_ERROR, 2) return end
    
    local propVector = Vector(propVectorX, propVectorY, propVectorZ)
    local propAngle = Angle(propAngleYaw, propAnglePitch, propAngleRoll)

    if propModel == "" or propModel == nil then notification.AddLegacy("You did not put a model for the props", NOTIFY_ERROR, 2) return end


    // Check if the props already exist 
    local prop = car:GetChildren()
    if #prop > 0 then
        for k, v in pairs(prop) do
            if v:GetModel() == propModel then
                v:Remove()
            end
        end
    end
    
    local prop = ents.CreateClientProp("prop_physics")  
    prop:SetModel(propModel)
    prop:SetPos(car:LocalToWorld(propVector))
    prop:SetAngles(car:LocalToWorldAngles(propAngle))
    prop:Spawn()
    prop:Activate()
    prop:SetParent(car)
    prop:SetSolid(SOLID_NONE)
    prop:SetMoveType(MOVETYPE_NONE)
    

    car:CallOnRemove( "RemoveProps", function( vehicle, prop )
        if IsValid(prop) then
            prop:Remove()
        end
    end, prop )
end

concommand.Add("object_creator_vehicle_visual", function() 
    VehiculeCustomizerVitroze:VisualProps(GetConVar("vc_props"):GetString(), GetConVar("vc_x"):GetFloat(), GetConVar("vc_y"):GetFloat(), GetConVar("vc_z"):GetFloat(), GetConVar("vc_pitch"):GetFloat(), GetConVar("vc_yaw"):GetFloat(), GetConVar("vc_roll"):GetFloat())
end)


